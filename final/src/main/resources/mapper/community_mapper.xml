<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="co.team.apt.community.mapper.CommunityMapper">
	<select id="boardList" resultType="BoardVo" parameterType="BoardVo">
		
		select a.* from( select b.*, rownum rn from (
		SELECT * 
		FROM BOARD
		<include refid="searchQuery"/>
		order by defno desc
	) b ) a where rn between #{start} and #{end}
	</select>
	
	<select id="pagingCount" resultType="int">
	    SELECT count(*) 
		FROM BOARD
		<include refid="searchQuery"></include>
	</select>
	
	<sql id = "searchQuery">
		<choose>
			<when test="searchType == 'all' ">
				where 
				type = #{type}
				and (title like '%' || #{search} || '%'
				or content like '%' || #{search} || '%'
				or writer like '%' || #{search} || '%')
			</when>
			<otherwise>
				where
				type = #{type}
			<if test="search != null and search != ''">
				and ${searchType} like '%' || #{search} || '%'
			</if>
			</otherwise>
		</choose>
	</sql>
	
	<select id="boardOne" resultType="BoardVo" parameterType="BoardVo">
		select *
		from board
		where defno=#{defno}
	</select>
	
	
	<insert id="boardInsert" parameterType="BoardVo">
		insert into board(
					defno,
					title,
					content,
					defdate,
					writer,
					type
					<if test="deffile != null and deffile != ''"> 
					, deffile
					</if>
					)
		values(
				def_seq.nextval,
				#{title},
				#{content},
				sysdate,
				#{writer},
				#{type}
				<if test="deffile != null and deffile != ''">
 				, #{deffile} 
 				</if>
				)
	</insert>
	
	<update id="boardUpdate" parameterType="BoardVo">
		update board
		set title=#{title},
			content=#{content},
			defdate=sysdate
		where defno = #{defno}
	</update>

	<delete id="boardDelete" parameterType="BoardVo">
		delete from board
		where defno = #{defno}
	</delete>
	
	<!-- 댓글 삽입 -->
	<insert id="addCommnet" parameterType="BcommentVo">
	<selectKey resultType="BcommentVo" keyProperty="reno,redate" order="BEFORE">
        SELECT re_seq.nextval reno, sysdate redate FROM dual        
    </selectKey>
		insert into bcomment(reno, writer, defno, recontent, redate, groupno)
		values(#{reno}, #{writer}, #{defno}, #{recontent}, sysdate, #{reno})
	</insert>
	
	<!-- 댓글 조회 -->
	<select id="commentList" parameterType="BoardVo" resultType="BcommentVo">
		select reno, defno, writer, recontent, redate, reclass, rereno, groupno, del
		from bcomment
		where defno = #{defno}
		and del = 'ing'	
		order by groupno, rereno	
	</select>
	
	<!-- 댓글 삭제 -->
	<update id="commentDelete" parameterType="BcommentVo">
		<!-- delete from bcomment
		where reno = #{reno} -->
		update bcomment
		set del='del'
		where reno=#{reno}
	</update>
	
	<!-- 댓글 수정 -->
	<update id="commentUpdate" parameterType="BcommentVo">
		update bcomment 
		set recontent = #{recontent},
			redate = sysdate
		where reno = #{reno}
	</update>
	
	<!-- 답댓글 작성 -->
	<!-- <select id="getRereno" resultType="string" parameterType="BcommentVo">
        select max(rereno)+1 rereno
 		from bcomment 
		where defno=#{defno}
   		and groupno=#{groupNo}
   		and rereno between #{reReno} and nvl((select min(rereno)-1 
										      from bcomment 
										      where defno=#{defno}
										      and groupno=#{groupNo}
										      and reclass = #{reClass}
										      and rereno  >  #{reReno}),
											  nvl((select max(rereno) 
												   from bcomment 
													where defno=#{defno}
													and groupno=#{groupNo}
													and reclass <![CDATA[>=]]> ${reClass}+1
													and rereno  >  #{reReno}),${reReno}))      
    </select>
	<update id="addReCommentBefore" parameterType="BcommentVo" >
    	update bcomment 
    	set rereno = rereno+1 
    	where defno = #{defno}
   		and groupno = #{groupNo}
   		and rereno <![CDATA[>=]]> #{reReno}
	</update> -->
	<insert id="addReComment" parameterType="BcommentVo">
	<selectKey resultType="BcommentVo" keyProperty="reReno" order="BEFORE">
        select max(rereno)+1 reReno  from bcomment where defno = #{defno} and groupno=#{groupNo}   
    </selectKey>
		insert into bcomment
		values (
			re_seq.nextval,
			#{recontent},
			sysdate,
			#{defno},
			#{writer},
			${reClass}+1,
			#{reReno},
			#{groupNo},
			default
		)
	</insert>
</mapper>
